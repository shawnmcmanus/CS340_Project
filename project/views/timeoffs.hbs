<!-- SOURCE: Used ChatGPT to help with formatting and the update form -->
<!-- Time-Offs Page -->

<h1>Time-Off Requests</h1>

<table border="1" cellpadding="8" cellspacing="0">
  <thead>
    <tr>
      <th>Employee</th>
      <th>Start Date</th>
      <th>End Date</th>
      <th>Status</th>
      <th>Reason</th>
      <th class="actions-header">Actions</th>
    </tr>
  </thead>
  <tbody>
    {{#each timeoffs}}
      <tr>
        <td>{{this.first_name}} {{this.last_name}}</td>
        <td>{{formatDate this.start_date}}</td>
        <td>{{formatDate this.end_date}}</td>
        <td>{{this.status}}</td>
        <td>{{this.reason}}</td>
        <td class="actions-cell">
          <button class="update-btn" data-id="{{this.time_off_id}}">Update</button>

          <form action="/delete-timeoff/{{this.time_off_id}}" method="POST" style="display:inline;">
            <button class="delete-btn" type="submit" onclick="return confirm('Are you sure you want to delete this time-off entry?')">Delete</button>
          </form>
        </td>
      </tr>
    {{/each}}
  </tbody>
</table>


<!-- Creates a new employee time-off request -->
<h2>Input Employee Time-Off Request</h2>
<form action="/timeoffs" method="POST">
  <label for="employee_id">Employee:</label>
  <select name="employee_id" required>
    {{#each employees}}
      <option value="{{this.employee_id}}">{{this.first_name}} {{this.last_name}}</option>
    {{/each}}
  </select><br>

  <label for="start_date">Start Date:</label>
  <input type="date" name="start_date" required><br>

  <label for="end_date">End Date:</label>
  <input type="date" name="end_date" required><br>

  <label for="status">Status:</label>
  <select name="status" required>
    <option value="Pending">Pending</option>
    <option value="Approved">Approved</option>
    <option value="Denied">Denied</option>
  </select><br>

  <label for="reason">Reason:</label>
  <input type="text" name="reason" required><br>

  <input type="submit" value="Submit Request">
</form>


<!-- Prevents a request from being made with impossible dates -->
<script>
document.querySelector('form[action="/timeoffs"]').addEventListener('submit', function (e) {
  const startDate = new Date(this.start_date.value);
  const endDate = new Date(this.end_date.value);

  if (endDate < startDate) {
    e.preventDefault();
    alert('End date cannot be earlier than start date.');
  }
});
</script>


<!-- Hanldes formatting of update popup -->
<div id="modalOverlay" style="display: none;">
  <div id="editModal">
    <form id="editForm" method="POST">
      <h2>Edit Time-Off Request</h2>

      <input type="hidden" name="time_off_id" id="edit-id">

      <label for="edit_employee_id">Employee:</label>
      <select name="employee_id" id="edit_employee_id" required>
        {{#each employees}}
          <option value="{{this.employee_id}}">{{this.first_name}} {{this.last_name}}</option>
        {{/each}}
      </select>

      <label for="edit_start_date">Start Date:</label>
      <input type="date" name="start_date" id="edit_start_date" required>

      <label for="edit_end_date">End Date:</label>
      <input type="date" name="end_date" id="edit_end_date" required>

      <label for="edit_status">Status:</label>
      <select name="status" id="edit_status" required>
        <option value="Pending">Pending</option>
        <option value="Approved">Approved</option>
        <option value="Denied">Denied</option>
      </select>

      <label for="edit_reason">Reason:</label>
      <input type="text" name="reason" id="edit_reason" required>

      <div style="margin-top: 20px;">
        <button type="submit">Save</button>
        <button type="button" id="closeModalBtn">Cancel</button>
      </div>
    </form>
  </div>
</div>


<!-- Handles data from the update popup -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('modalOverlay');
    const editForm = document.getElementById('editForm');
    const closeBtn = document.getElementById('closeModalBtn');

    document.querySelectorAll('.update-btn').forEach(button => {
      button.addEventListener('click', async () => {
        const id = button.dataset.id;

        try {
          const res = await fetch(`/timeoffs/${id}/json`);
          const data = await res.json();

          editForm.action = `/timeoffs/edit/${id}`;
          document.getElementById('edit-id').value = id;
          document.getElementById('edit_employee_id').value = data.employee_id;
          document.getElementById('edit_start_date').value = data.start_date.split('T')[0];
          document.getElementById('edit_end_date').value = data.end_date.split('T')[0];
          document.getElementById('edit_status').value = data.status;
          document.getElementById('edit_reason').value = data.reason;

          modal.style.display = 'block';
        } catch (err) {
          console.error('Failed to load time-off data:', err);
        }
      });
    });

    closeBtn.addEventListener('click', () => {
      modal.style.display = 'none';
    });
  });
</script>
